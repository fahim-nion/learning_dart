- lambda/anonymous function
- higher order function / callback function
- recursive function
- dart I/O library
- file read , write
- file delete , rename, or checking existance
- creating directory
- creating files in between directory
- File path
- Asynchronous Error Handling
- Dart Mixin

**Advanced OOP and Design Pattern**
- Dart Factory Constructor
- Dart Singleton Pattern
- Dart Dependency Injection
- Prototype Pattern
- Builder Pattern
- Factory Method Pattern
- Object Cloning
- Composition Vs Inheritance
- SOLID Principles
- Mixin Vs Obstract Class
- Type Reflection
- Data Class and Immutable Class
- Open/Closed Principles
- Liscov Substution Principle
- Interface Seggregation Principle
- Dependency Inversion Principle


## Dart Asynchronous Programming ##
- Future and Asynchronous Operation
- Await and Asynchronous Keyword
- Stream and Stream Builder
- Event Loop and MicroTask
- Using Stream Controller
- Isolate and Parallel Programming


//API Calling Related//
- How to call an API using HTTP Package
- GET , POST Req
- PUT, PATCH, DELETE Req
- Maintaining Header and Authentication
- JSON Data Parsing
- Using Future and Await for Asynchronous API call
- Handling Live API Data Using Stream
- API Response Caching and Optimization



**some more things will be updated from here
